{
  "contractName": "OracleWithTellor",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getCurrentValue",
      "outputs": [
        {
          "name": "ifRetrieve",
          "type": "bool"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_request",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "requestData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_request",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "requestDataWithEther",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getFirstVerifiedDataAfter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "addTip",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_userContract",
          "type": "address"
        }
      ],
      "name": "setUserContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getAnyDataAfter",
      "outputs": [
        {
          "name": "_ifRetrieve",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "addTipWithEther",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_userContract",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getCurrentValue\",\"outputs\":[{\"name\":\"ifRetrieve\",\"type\":\"bool\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_request\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_granularity\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"requestData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_request\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_granularity\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"requestDataWithEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getFirstVerifiedDataAfter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"addTip\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_userContract\",\"type\":\"address\"}],\"name\":\"setUserContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getAnyDataAfter\",\"outputs\":[{\"name\":\"_ifRetrieve\",\"type\":\"bool\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"addTipWithEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_userContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addTip(uint256,uint256)\":{\"details\":\"Allows the user to tip miners for the specified request using Tributes\",\"params\":{\"_requestId\":\"to tip\",\"_tip\":\"amount\"}},\"addTipWithEther(uint256,uint256)\":{\"details\":\"Allows user to add tip with Ether by sending the ETH to the userContract and exchanging it for Tributes at the price specified by the userContract owner.\",\"params\":{\"_requestId\":\"to tip\",\"_tip\":\"amount\"}},\"getAnyDataAfter(uint256,uint256)\":{\"details\":\"Allows the user to get the first value for the requestId after the specified timestamp\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\",\"_timestamp\":\"after which to search for first verified value\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp\"},\"getCurrentValue(uint256)\":{\"details\":\"Allows the user to get the latest value for the requestId specified\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp\"},\"getFirstVerifiedDataAfter(uint256,uint256)\":{\"details\":\"Allows the user to get the first verified value for the requestId after the specified timestamp\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\",\"_timestamp\":\"after which to search for first verified value\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp, the timestamp after which it searched for the first verified value\"},\"requestData(string,string,uint256,uint256)\":{\"details\":\"Allows the user to submit a request for data to the oracle using Tributes Allowing this prevents us from increasing spread too high (since if we set the price too hight users will just go to an exchange and get tokens from there)\",\"params\":{\"_granularity\":\"is the number of decimals miners should include on the submitted value\",\"_request\":\"string API being requested to be mined\",\"_symbol\":\"is the short string symbol for the api request\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool\"}},\"requestDataWithEther(string,string,uint256,uint256)\":{\"details\":\"Allows the user to submit a request for data to the oracle using ETH\",\"params\":{\"_granularity\":\"is the number of decimals miners should include on the submitted value\",\"_request\":\"string API being requested to be mined\",\"_symbol\":\"is the short string symbol for the api request\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool\"}},\"setUserContract(address)\":{\"details\":\"allows owner to set the user contract address\",\"params\":{\"_userContract\":\"address\"}},\"transferOwnership(address)\":{\"details\":\"allows owner to transfer ownership\",\"params\":{\"_newOwner\":\"address\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/charles.beyer/sandboxStuff/tell/contracts/OracleWithTellor.sol\":\"OracleWithTellor\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/charles.beyer/sandboxStuff/tell/contracts/OracleWithTellor.sol\":{\"keccak256\":\"0x40715c0faacf8502c5828506d03ad8158ff3faeb114fe868a5de142edb237a64\",\"urls\":[\"bzzr://e2ea8e5db284b1f7bec8ed9467d83a2c502b7aa5f36087d222f493d4ee1ddbd1\"]},\"/Users/charles.beyer/sandboxStuff/tell/contracts/UserContract.sol\":{\"keccak256\":\"0x395aed1eeb6661251e779204cff1295eb49a5cc0d7180262279382cde35ea3f5\",\"urls\":[\"bzzr://6d51a9aa79afb762281d8df000e294a46ca27a9cda1347c4f70c3f82cefbdf83\"]},\"/Users/charles.beyer/sandboxStuff/tell/contracts/UsingTellor.sol\":{\"keccak256\":\"0xb848765e2db99d65b3828420d7e57f68182fa882d3b176307e25fbcba48f7e5d\",\"urls\":[\"bzzr://32f64f01fff8f8c7cf74200a78aaa7a1f3feab2bdb8fcca5d02d215e5f0d0ec9\"]},\"/Users/charles.beyer/sandboxStuff/tell/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x835569f11965799f14a74288c6b76a8f6723c0b4bc45ba767e5ad060e71d704f\",\"urls\":[\"bzzr://e5b9dad8b6c4af43bf63b96d332f46c965fa36e25e934228a533ffd9d8f1a27d\"]},\"/Users/charles.beyer/sandboxStuff/tell/contracts/libraries/TellorGettersLibrary.sol\":{\"keccak256\":\"0xd7ba7aeb64a7eb89c3d02be1b4a11e9815d491cac3b71c669cb7c537ca5ba5d1\",\"urls\":[\"bzzr://83e6f66e8aa34b6ae56a54952c4e54ff47b05151e32815b17f3f461a7b05b63e\"]},\"/Users/charles.beyer/sandboxStuff/tell/contracts/libraries/TellorLibrary.sol\":{\"keccak256\":\"0x6542cd93b5412ed864fced079bf3a9c3321a283ed291e047c3fc0e5f90b30a1e\",\"urls\":[\"bzzr://17e5e9929cfaaef91172ab5298971e758cdd5a370dc60722b687ded04800927f\"]},\"/Users/charles.beyer/sandboxStuff/tell/contracts/libraries/TellorStorage.sol\":{\"keccak256\":\"0x15634e54d282ec350c3a9e0c6f7bfeb73121d7fbe6c1ed03ca594f984af87925\",\"urls\":[\"bzzr://aa8101894a2e3cf36fc1a0dbad1d964b11117e07f9013ef477cfb6a1d7fea987\"]},\"/Users/charles.beyer/sandboxStuff/tell/contracts/libraries/TellorTransfer.sol\":{\"keccak256\":\"0x3b0033957aed6e8b43e01b2d203aab9e7868ba5c873c219dc80f3a3e55a3c212\",\"urls\":[\"bzzr://8e87119edb2141bddde99fb3894f4147e4621069727fca9a3bdd6d0a97e2a9cc\"]},\"/Users/charles.beyer/sandboxStuff/tell/contracts/libraries/Utilities.sol\":{\"keccak256\":\"0xa4fddaeaf9246f07e7464bc7936ea47431316d96dc426e2daef9e4dab796bd4a\",\"urls\":[\"bzzr://255a321376bad89f829a1e25329aadbe03edf9773cb342b24c76910ca6e1b108\"]},\"/Users/charles.beyer/sandboxStuff/tell/contracts/tellor/Tellor.sol\":{\"keccak256\":\"0x093f2af8a4895fde683ea5194dab9b9f408c7de54b4b6960000994aba4544216\",\"urls\":[\"bzzr://e35f615b75ef9fddc700121186d269e44a9720696391dec923b50f6f9c3e0ba4\"]},\"/Users/charles.beyer/sandboxStuff/tell/contracts/tellor/TellorGetters.sol\":{\"keccak256\":\"0x8a56763f5095c975d6b9e059121932a0ea9ea0e2d0b5cc5f1b2646f4b1895120\",\"urls\":[\"bzzr://fb37f15cdedf161889065f92bd58a23aa9aa61f781facae2e272639b4b8d7a01\"]},\"/Users/charles.beyer/sandboxStuff/tell/contracts/tellor/TellorMaster.sol\":{\"keccak256\":\"0x9dc2a851f8369db9f09965dacfe18ba4c5d22fffc3bfade51f3c56e76c36a46c\",\"urls\":[\"bzzr://64ea11dfbcf67f768b2b9622ca9a4ef854efc338011450d002e6c7406e488a20\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806112ea8339810180604052602081101561003057600080fd5b810190808051906020019092919050505080806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506111d5806101156000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b14610378578063a1206d4e146103cf578063d269a83c14610420578063e723e3b51461048b578063f2fde38b146104c357610091565b80633fcad964146100965780633fff2816146100f75780634482e6f3146101e65780635f059f3e146102c8578063752d49a114610333575b600080fd5b3480156100a257600080fd5b506100cf600480360360208110156100b957600080fd5b8101908080359060200190929190505050610514565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561010357600080fd5b506101e46004803603608081101561011a57600080fd5b810190808035906020019064010000000081111561013757600080fd5b82018360208201111561014957600080fd5b8035906020019184600183028401116401000000008311171561016b57600080fd5b90919293919293908035906020019064010000000081111561018c57600080fd5b82018360208201111561019e57600080fd5b803590602001918460018302840111640100000000831117156101c057600080fd5b909192939192939080359060200190929190803590602001909291905050506105e7565b005b6102c6600480360360808110156101fc57600080fd5b810190808035906020019064010000000081111561021957600080fd5b82018360208201111561022b57600080fd5b8035906020019184600183028401116401000000008311171561024d57600080fd5b90919293919293908035906020019064010000000081111561026e57600080fd5b82018360208201111561028057600080fd5b803590602001918460018302840111640100000000831117156102a257600080fd5b909192939192939080359060200190929190803590602001909291905050506108e3565b005b3480156102d457600080fd5b5061030b600480360360408110156102eb57600080fd5b8101908080359060200190929190803590602001909291905050506109e8565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561033f57600080fd5b506103766004803603604081101561035657600080fd5b810190808035906020019092919080359060200190929190505050610ac3565b005b34801561038457600080fd5b5061038d610d49565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103db57600080fd5b5061041e600480360360208110156103f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d6f565b005b34801561042c57600080fd5b506104636004803603604081101561044357600080fd5b810190808035906020019092919080359060200190929190505050610e75565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b6104c1600480360360408110156104a157600080fd5b810190808035906020019092919080359060200190929190505050610f50565b005b3480156104cf57600080fd5b50610512600480360360208110156104e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fe9565b005b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633fcad964856040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b15801561058b57600080fd5b505afa15801561059f573d6000803e3d6000fd5b505050506040513d60608110156105b557600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561065057600080fd5b505afa158015610664573d6000803e3d6000fd5b505050506040513d602081101561067a57600080fd5b8101908080519060200190929190505050905060008211156107ff578073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561075157600080fd5b505af1158015610765573d6000803e3d6000fd5b505050506040513d602081101561077b57600080fd5b81019080805190602001909291905050506107fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5b8073ffffffffffffffffffffffffffffffffffffffff16633fff28168888888888886040518763ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f82011690508083019250505098505050505050505050600060405180830381600087803b1580156108c257600080fd5b505af11580156108d6573d6000803e3d6000fd5b5050505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634482e6f3348888888888886040518863ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f820116905080830192505050985050505050505050506000604051808303818588803b1580156109c757600080fd5b505af11580156109db573d6000803e3d6000fd5b5050505050505050505050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f059f3e86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015610a6757600080fd5b505afa158015610a7b573d6000803e3d6000fd5b505050506040513d6060811015610a9157600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015610b2c57600080fd5b505afa158015610b40573d6000803e3d6000fd5b505050506040513d6020811015610b5657600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610c2457600080fd5b505af1158015610c38573d6000803e3d6000fd5b505050506040513d6020811015610c4e57600080fd5b8101908080519060200190929190505050610cd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663752d49a184846040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b158015610d2c57600080fd5b505af1158015610d40573d6000803e3d6000fd5b50505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e32576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d269a83c86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015610ef457600080fd5b505afa158015610f08573d6000803e3d6000fd5b505050506040513d6060811015610f1e57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e723e3b53484846040518463ffffffff1660e01b815260040180838152602001828152602001925050506000604051808303818588803b158015610fcc57600080fd5b505af1158015610fe0573d6000803e3d6000fd5b50505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820a2bef6ace08f7a3d0b4efb3e0bd112cc882d64649b3824adb622d8cb0abc77ad0029",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b14610378578063a1206d4e146103cf578063d269a83c14610420578063e723e3b51461048b578063f2fde38b146104c357610091565b80633fcad964146100965780633fff2816146100f75780634482e6f3146101e65780635f059f3e146102c8578063752d49a114610333575b600080fd5b3480156100a257600080fd5b506100cf600480360360208110156100b957600080fd5b8101908080359060200190929190505050610514565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561010357600080fd5b506101e46004803603608081101561011a57600080fd5b810190808035906020019064010000000081111561013757600080fd5b82018360208201111561014957600080fd5b8035906020019184600183028401116401000000008311171561016b57600080fd5b90919293919293908035906020019064010000000081111561018c57600080fd5b82018360208201111561019e57600080fd5b803590602001918460018302840111640100000000831117156101c057600080fd5b909192939192939080359060200190929190803590602001909291905050506105e7565b005b6102c6600480360360808110156101fc57600080fd5b810190808035906020019064010000000081111561021957600080fd5b82018360208201111561022b57600080fd5b8035906020019184600183028401116401000000008311171561024d57600080fd5b90919293919293908035906020019064010000000081111561026e57600080fd5b82018360208201111561028057600080fd5b803590602001918460018302840111640100000000831117156102a257600080fd5b909192939192939080359060200190929190803590602001909291905050506108e3565b005b3480156102d457600080fd5b5061030b600480360360408110156102eb57600080fd5b8101908080359060200190929190803590602001909291905050506109e8565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561033f57600080fd5b506103766004803603604081101561035657600080fd5b810190808035906020019092919080359060200190929190505050610ac3565b005b34801561038457600080fd5b5061038d610d49565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103db57600080fd5b5061041e600480360360208110156103f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d6f565b005b34801561042c57600080fd5b506104636004803603604081101561044357600080fd5b810190808035906020019092919080359060200190929190505050610e75565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b6104c1600480360360408110156104a157600080fd5b810190808035906020019092919080359060200190929190505050610f50565b005b3480156104cf57600080fd5b50610512600480360360208110156104e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fe9565b005b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633fcad964856040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b15801561058b57600080fd5b505afa15801561059f573d6000803e3d6000fd5b505050506040513d60608110156105b557600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561065057600080fd5b505afa158015610664573d6000803e3d6000fd5b505050506040513d602081101561067a57600080fd5b8101908080519060200190929190505050905060008211156107ff578073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561075157600080fd5b505af1158015610765573d6000803e3d6000fd5b505050506040513d602081101561077b57600080fd5b81019080805190602001909291905050506107fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5b8073ffffffffffffffffffffffffffffffffffffffff16633fff28168888888888886040518763ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f82011690508083019250505098505050505050505050600060405180830381600087803b1580156108c257600080fd5b505af11580156108d6573d6000803e3d6000fd5b5050505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634482e6f3348888888888886040518863ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f820116905080830192505050985050505050505050506000604051808303818588803b1580156109c757600080fd5b505af11580156109db573d6000803e3d6000fd5b5050505050505050505050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f059f3e86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015610a6757600080fd5b505afa158015610a7b573d6000803e3d6000fd5b505050506040513d6060811015610a9157600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015610b2c57600080fd5b505afa158015610b40573d6000803e3d6000fd5b505050506040513d6020811015610b5657600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610c2457600080fd5b505af1158015610c38573d6000803e3d6000fd5b505050506040513d6020811015610c4e57600080fd5b8101908080519060200190929190505050610cd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663752d49a184846040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b158015610d2c57600080fd5b505af1158015610d40573d6000803e3d6000fd5b50505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e32576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d269a83c86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015610ef457600080fd5b505afa158015610f08573d6000803e3d6000fd5b505050506040513d6060811015610f1e57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e723e3b53484846040518463ffffffff1660e01b815260040180838152602001828152602001925050506000604051808303818588803b158015610fcc57600080fd5b505af1158015610fe0573d6000803e3d6000fd5b50505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820a2bef6ace08f7a3d0b4efb3e0bd112cc882d64649b3824adb622d8cb0abc77ad0029",
  "sourceMap": "54:192:1:-;;;145:97;8:9:-1;5:2;;;30:1;27;20:12;5:2;145:97:1;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;145:97:1;;;;;;;;;;;;;;;;192:13;643::3;609:18;;:48;;;;;;;;;;;;;;;;;;675:10;667:5;;:18;;;;;;;;;;;;;;;;;;557:135;227:10:1;219:5;;:18;;;;;;;;;;;;;;;;;;145:97;54:192;;;;;;",
  "deployedSourceMap": "54:192:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;972:197:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;972:197:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;972:197:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3150:397;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3150:397:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3150:397:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3150:397:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3150:397:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3150:397:3;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3150:397:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3150:397:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3150:397:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4030:246;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4030:246:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4030:246:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4030:246:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4030:246:3;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4030:246:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4030:246:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4030:246:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1651:232;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1651:232:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1651:232:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4435:273;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4435:273:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4435:273:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;120:20:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;120:20:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5243:203:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5243:203:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5243:203:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;2235:259;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2235:259:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2235:259:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4956:174;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4956:174:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5544:211;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5544:211:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5544:211:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;972:197;1038:15;1055:13;1070:27;1116:18;;;;;;;;;;;:34;;;1151:10;1116:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1116:46:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1116:46:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1116:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1109:53;;;;;;972:197;;;;;:::o;3150:397::-;3277:14;3301:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3301:41:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3301:41:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3301:41:3;;;;;;;;;;;;;;;;3277:66;;3364:1;3357:4;:8;3353:120;;;3389:7;:20;;;3410:10;3430:4;3437;3389:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3389:53:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3389:53:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3389:53:3;;;;;;;;;;;;;;;;3381:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3353:120;3482:7;:19;;;3502:8;;3512:7;;3521:12;3535:4;3482:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3482:58:3;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3482:58:3;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3482:58:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3482:58:3;;;;3150:397;;;;;;;:::o;4030:246::-;4174:18;;;;;;;;;;;:39;;;4220:9;4231:8;;4241:7;;4250:12;4264:4;4174:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4174:95:3;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4174:95:3;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4174:95:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4174:95:3;;;;;4030:246;;;;;;:::o;1651:232::-;1747:4;1753:7;1762:27;1808:18;;;;;;;;;;;:44;;;1853:10;1865;1808:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1808:68:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1808:68:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1808:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1801:75;;;;;;1651:232;;;;;:::o;4435:273::-;4502:14;4526:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4526:41:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4526:41:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4526:41:3;;;;;;;;;;;;;;;;4502:66;;4586:7;:20;;;4607:10;4627:4;4634;4586:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4586:53:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4586:53:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4586:53:3;;;;;;;;;;;;;;;;4578:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4669:7;:14;;;4684:10;4696:4;4669:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4669:32:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4669:32:3;;;;4435:273;;;:::o;120:20:1:-;;;;;;;;;;;;;:::o;5243:203:3:-;5330:5;;;;;;;;;;;5316:19;;:10;:19;;;5308:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5425:13;5391:18;;:48;;;;;;;;;;;;;;;;;;5243:203;:::o;2235:259::-;2345:16;2363:14;2379:27;2429:18;;;;;;;;;;;:34;;;2464:10;2476;2429:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2429:58:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2429:58:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2429:58:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2422:65;;;;;;2235:259;;;;;:::o;4956:174::-;5053:18;;;;;;;;;;;5040:48;;;5095:9;5106:10;5118:4;5040:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5040:83:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5040:83:3;;;;;4956:174;;:::o;5544:211::-;5639:5;;;;;;;;;;;5625:19;;:10;:19;;;5617:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5683:38;5704:5;;;;;;;;;;;5711:9;5683:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5739:9;5731:5;;:17;;;;;;;;;;;;;;;;;;5544:211;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport './UsingTellor.sol';\n\ncontract OracleWithTellor is UsingTellor {\n\n    /*Variables*/\n    address public owner;\n\n  constructor(address _userContract) UsingTellor(_userContract) public{\n    owner = msg.sender;\n  }\n\n }",
  "sourcePath": "/Users/charles.beyer/sandboxStuff/tell/contracts/OracleWithTellor.sol",
  "ast": {
    "absolutePath": "/Users/charles.beyer/sandboxStuff/tell/contracts/OracleWithTellor.sol",
    "exportedSymbols": {
      "OracleWithTellor": [
        58
      ]
    },
    "id": 59,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/charles.beyer/sandboxStuff/tell/contracts/UsingTellor.sol",
        "file": "./UsingTellor.sol",
        "id": 39,
        "nodeType": "ImportDirective",
        "scope": 59,
        "sourceUnit": 766,
        "src": "25:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 40,
              "name": "UsingTellor",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 765,
              "src": "83:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UsingTellor_$765",
                "typeString": "contract UsingTellor"
              }
            },
            "id": 41,
            "nodeType": "InheritanceSpecifier",
            "src": "83:11:1"
          }
        ],
        "contractDependencies": [
          765
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 58,
        "linearizedBaseContracts": [
          58,
          765
        ],
        "name": "OracleWithTellor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 43,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 58,
            "src": "120:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "120:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "213:29:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "219:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3872,
                        "src": "227:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "227:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "219:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "219:18:1"
                }
              ]
            },
            "documentation": null,
            "id": 57,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 48,
                    "name": "_userContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45,
                    "src": "192:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 49,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 47,
                  "name": "UsingTellor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 765,
                  "src": "180:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_UsingTellor_$765_$",
                    "typeString": "type(contract UsingTellor)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "180:26:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "name": "_userContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "157:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "157:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "156:23:1"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "213:0:1"
            },
            "scope": 58,
            "src": "145:97:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 59,
        "src": "54:192:1"
      }
    ],
    "src": "0:246:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/charles.beyer/sandboxStuff/tell/contracts/OracleWithTellor.sol",
    "exportedSymbols": {
      "OracleWithTellor": [
        58
      ]
    },
    "id": 59,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/charles.beyer/sandboxStuff/tell/contracts/UsingTellor.sol",
        "file": "./UsingTellor.sol",
        "id": 39,
        "nodeType": "ImportDirective",
        "scope": 59,
        "sourceUnit": 766,
        "src": "25:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 40,
              "name": "UsingTellor",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 765,
              "src": "83:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UsingTellor_$765",
                "typeString": "contract UsingTellor"
              }
            },
            "id": 41,
            "nodeType": "InheritanceSpecifier",
            "src": "83:11:1"
          }
        ],
        "contractDependencies": [
          765
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 58,
        "linearizedBaseContracts": [
          58,
          765
        ],
        "name": "OracleWithTellor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 43,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 58,
            "src": "120:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "120:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "213:29:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "219:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3872,
                        "src": "227:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "227:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "219:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "219:18:1"
                }
              ]
            },
            "documentation": null,
            "id": 57,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 48,
                    "name": "_userContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45,
                    "src": "192:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 49,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 47,
                  "name": "UsingTellor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 765,
                  "src": "180:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_UsingTellor_$765_$",
                    "typeString": "type(contract UsingTellor)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "180:26:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "name": "_userContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "157:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "157:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "156:23:1"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "213:0:1"
            },
            "scope": 58,
            "src": "145:97:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 59,
        "src": "54:192:1"
      }
    ],
    "src": "0:246:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_previousOwner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0xb4ef02Bb68026a66e123Ef5757611Ef21C189E34",
      "transactionHash": "0x0a8d99386d27c02f407d6e0afc4980e7fd2d56c8a4305887e2760617cbf1e43f"
    }
  },
  "schemaVersion": "3.0.13",
  "updatedAt": "2020-03-02T12:13:28.274Z",
  "devdoc": {
    "methods": {
      "addTip(uint256,uint256)": {
        "details": "Allows the user to tip miners for the specified request using Tributes",
        "params": {
          "_requestId": "to tip",
          "_tip": "amount"
        }
      },
      "addTipWithEther(uint256,uint256)": {
        "details": "Allows user to add tip with Ether by sending the ETH to the userContract and exchanging it for Tributes at the price specified by the userContract owner.",
        "params": {
          "_requestId": "to tip",
          "_tip": "amount"
        }
      },
      "getAnyDataAfter(uint256,uint256)": {
        "details": "Allows the user to get the first value for the requestId after the specified timestamp",
        "params": {
          "_requestId": "is the requestId to look up the value for",
          "_timestamp": "after which to search for first verified value"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp"
      },
      "getCurrentValue(uint256)": {
        "details": "Allows the user to get the latest value for the requestId specified",
        "params": {
          "_requestId": "is the requestId to look up the value for"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp"
      },
      "getFirstVerifiedDataAfter(uint256,uint256)": {
        "details": "Allows the user to get the first verified value for the requestId after the specified timestamp",
        "params": {
          "_requestId": "is the requestId to look up the value for",
          "_timestamp": "after which to search for first verified value"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp, the timestamp after which it searched for the first verified value"
      },
      "requestData(string,string,uint256,uint256)": {
        "details": "Allows the user to submit a request for data to the oracle using Tributes Allowing this prevents us from increasing spread too high (since if we set the price too hight users will just go to an exchange and get tokens from there)",
        "params": {
          "_granularity": "is the number of decimals miners should include on the submitted value",
          "_request": "string API being requested to be mined",
          "_symbol": "is the short string symbol for the api request",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool"
        }
      },
      "requestDataWithEther(string,string,uint256,uint256)": {
        "details": "Allows the user to submit a request for data to the oracle using ETH",
        "params": {
          "_granularity": "is the number of decimals miners should include on the submitted value",
          "_request": "string API being requested to be mined",
          "_symbol": "is the short string symbol for the api request",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool"
        }
      },
      "setUserContract(address)": {
        "details": "allows owner to set the user contract address",
        "params": {
          "_userContract": "address"
        }
      },
      "transferOwnership(address)": {
        "details": "allows owner to transfer ownership",
        "params": {
          "_newOwner": "address"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}